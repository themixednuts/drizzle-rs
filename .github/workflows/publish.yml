name: Publish

on:
  pull_request:
    types: [closed]
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  publish:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'release') && github.actor == 'github-actions[bot]'
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust (MSRV from Cargo.toml)
        run: |
          RUST_VERSION=$(grep '^rust-version = ' Cargo.toml | sed 's/rust-version = "\(.*\)"/\1/')
          echo "RUST_VERSION=$RUST_VERSION" >> $GITHUB_ENV
          echo "Using Rust version: $RUST_VERSION"
      
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install release-plz
        uses: taiki-e/install-action@v2
        with:
          tool: release-plz

      - name: Run release-plz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: release-plz release