[package]
name = "drizzle-rs"
version.workspace = true
edition.workspace = true
authors.workspace = true
keywords.workspace = true
description.workspace = true
license.workspace = true
repository.workspace = true

[workspace]
resolver = "3"
members = ["querybuilder", "drivers", "procmacros"]

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Mixed Nuts"]
keywords = ["drizzle", "rizzle", "orm", "database", "sqlite"]
description = "A type-safe SQL query builder for Rust"
license = "MIT"
repository = "https://github.com/yourusername/drizzle-rs"

[workspace.dependencies]
paste = "1.0.15"
rusqlite = { version = "0.34.0", features = ["bundled"] }
querybuilder = { path = "./querybuilder" }
drivers = { path = "./drivers" }
procmacros = { path = "./procmacros" }
uuid = { version = "1.16.0", features = ["v4"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = { version = "1.0" }
anyhow = "1.0.75"
thiserror = "1.0.49"
libsql = { version = "0.9" }
libsql-rusqlite = { version = "0.33.0", features = ["bundled"] }
drizzle-rs = { path = ".", version = "0.1.0" }

# Add dev-dependencies for tests
[dev-dependencies]
drizzle-rs = { path = ".", features = ["rusqlite"] }

[features]
# Driver features: Enabling a driver enables:
# 1. The driver implementation in the `drivers` crate
# 2. The corresponding dialect in `querybuilder` and `procmacros` (e.g., `sqlite`)
# 3. The driver-specific features in `querybuilder` (for type conversions)
# 4. The actual driver dependency (`dep:...`)
rusqlite = [
	"dep:rusqlite",
	"drivers/rusqlite",
	"querybuilder/sqlite",
	"procmacros/sqlite",
	"querybuilder/rusqlite",
]
libsql = [
	"dep:libsql",
	"drivers/libsql",
	"querybuilder/sqlite",
	"procmacros/sqlite",
	"querybuilder/libsql",
]
libsql-rusqlite = [
	"dep:libsql-rusqlite",
	"drivers/libsql-rusqlite",
	"querybuilder/sqlite",
	"procmacros/sqlite",
	"querybuilder/libsql-rusqlite",
]
# sqlx = ["drivers/sqlx", "querybuilder/postgres", "querybuilder/mysql", "querybuilder/sqlite"] # Example for future sqlx

# Utility features
serde_json = ["querybuilder/serde_json", "dep:serde_json"]
uuid = ["querybuilder/uuid", "dep:uuid"]

# Remove dialect-specific features from the top level, they are activated via drivers
# sqlite = [] # Removed
# postgres = [] # Removed
# mysql = [] # Removed

[dependencies]
querybuilder = { workspace = true }
drivers = { workspace = true }
procmacros = { workspace = true }
paste = { workspace = true }

# Optional dependencies activated by features
rusqlite = { workspace = true, optional = true }
libsql = { workspace = true, optional = true }
libsql-rusqlite = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true, optional = true }
