---
description: 
globs: 
alwaysApply: true
---

# Rust Rules

- Use the new module naming convention ie src/sqlite.rs  src/sqlite/other.rs vs doing the old src/sqlite/mod.rs


# Refactoring Rules

- Minimize creating new types if we don't need it. 
- Make sure we don't duplicate work
- Don't change what works unless we have to, to make the new request work.
- Don't rename unless we have to or actually makes sense.


# Example Rules

- If you create examples, make it clear in scope, and use only procmacros, don't implement things manually as thats not how the user will use this library.
- AGAIN DO NOT MANUALLY IMPLEMENT TRAITS OR ANYTHING THAT WE HAVE [lib.rs](mdc:procmacros/src/lib.rs) provide.
- Make sure not to over document, keep things simple and straight to the point. Uses asserts to make things clear what the expected outcome are.
- Examples are MEANT TO COMPILE. Follow [api.mdc](mdc:.cursor/rules/api.mdc) for api implementations when provided, use Test Driven Development where possible to make the examples compile.
- NEVER PUT IN COMMENTS TO SAY `THIS IS A TEMPLATE` OR `NOT MEANT TO COMPILE` as we are ALWAYS MEANT TO COMPILE

# Tests Rules

- DO NOT MANUALLY IMPLEMENT TRAITS OR ANYTHING [lib.rs](mdc:procmacros/src/lib.rs) provides.
- Keep things simple and straight to the point.
- Tests are MEANT TO COMPILE. Follow @api.mdc for api implementations when provided, use Test Driven Development where possible to make the examples compile.- NEVER PUT IN COMMENTS TO SAY `THIS IS A TEMPLATE` OR `NOT MEANT TO COMPILE` as we are ALWAYS MEANT TO COMPILE
